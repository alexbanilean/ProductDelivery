CREATE TABLE IF NOT EXISTS product_types(id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(30) NOT NULL);
CREATE TABLE IF NOT EXISTS products(id INTEGER PRIMARY KEY AUTOINCREMENT, product_type_id INTEGER NOT NULL, name VARCHAR(30) NOT NULL, price DOUBLE NOT NULL, weight DOUBLE, measurements VARCHAR(50), FOREIGN KEY(product_type_id) REFERENCES product_types(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS drinks(id INTEGER PRIMARY KEY AUTOINCREMENT, product_id INTEGER NOT NULL, isAlcoholic BOOLEAN, hasSugar BOOLEAN, calories INTEGER, ingredients VARCHAR(100), FOREIGN KEY(product_id) REFERENCES products(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS food(id INTEGER PRIMARY KEY AUTOINCREMENT, product_id INTEGER NOT NULL, calories INTEGER, ingredients VARCHAR(100), allergens VARCHAR(100), FOREIGN KEY(product_id) REFERENCES products(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS medicine(id INTEGER PRIMARY KEY AUTOINCREMENT, product_id INTEGER NOT NULL, ingredients VARCHAR(100), allergens VARCHAR(100), FOREIGN KEY(product_id) REFERENCES products(id) ON DELETE CASCADE));
CREATE TABLE IF NOT EXISTS books(id INTEGER PRIMARY KEY AUTOINCREMENT, product_id INTEGER NOT NULL, author VARCHAR(50), numberOfPages INTEGER, releaseDate DATE, FOREIGN KEY(product_id) REFERENCES products(id) ON DELETE CASCADE));
CREATE TABLE IF NOT EXISTS flowers(id INTEGER PRIMARY KEY AUTOINCREMENT, product_id INTEGER NOT NULL, species VARCHAR(50), color VARCHAR(50), FOREIGN KEY(product_id) REFERENCES products(id) ON DELETE CASCADE));
CREATE TABLE IF NOT EXISTS bouquets(id INTEGER PRIMARY KEY AUTOINCREMENT, product_id INTEGER NOT NULL, scentPalette VARCHAR(50), wrapping VARCHAR(50), FOREIGN KEY(product_id) REFERENCES products(id) ON DELETE CASCADE));

CREATE TABLE IF NOT EXISTS flowers_bouquets(id INTEGER PRIMARY KEY AUTOINCREMENT, flower_id INTEGER NOT NULL, bouquet_id INTEGER NOT NULL, quantity INTEGER NOT NULL DEFAULT 1, FOREIGN KEY(flower_id) REFERENCES flowers(id) ON DELETE CASCADE, FOREIGN KEY(bouquet_id) REFERENCES bouquets(id) ON DELETE CASCADE);

CREATE TABLE IF NOT EXISTS user_types(id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(30) NOT NULL);
CREATE TABLE IF NOT EXISTS users(id INTEGER PRIMARY KEY AUTOINCREMENT, user_type_id INTEGER NOT NULL, name VARCHAR(30) NOT NULL, email VARCHAR(50) NOT NULL, password VARCHAR(50) NOT NULL, phoneNumber VARCHAR(30), FOREIGN KEY(user_type_id) REFERENCES user_types(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS administrators(id INTEGER PRIMARY KEY AUTOINCREMENT, licenseNumber INTEGER, user_id INTEGER NOT NULL, FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS customers(id INTEGER PRIMARY KEY AUTOINCREMENT, preferredAddress VARCHAR(30), preferredPaymentMethod VARCHAR(30), user_id INTEGER NOT NULL, FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE);

CREATE TABLE IF NOT EXISTS shop_types(id INTEGER PRIMARY KEY AUTOINCREMENT, name VARCHAR(30) NOT NULL);
CREATE TABLE IF NOT EXISTS shops(id INTEGER PRIMARY KEY AUTOINCREMENT, shop_type_id INTEGER NOT NULL, name VARCHAR(30) NOT NULL, address VARCHAR(50) NOT NULL, owner_id INTEGER, FOREIGN KEY(shop_type_id) REFERENCES shop_types(id) ON DELETE CASCADE, FOREIGN KEY(owner_id) REFERENCES owners(id) ON DELETE CASCADE);

CREATE TABLE IF NOT EXISTS deliveryEmployees(id INTEGER PRIMARY KEY AUTOINCREMENT, carNumber VARCHAR(30), averageDeliveryTime INTEGER, averageOrdersPerDay INTEGER, shop_id INTEGER, user_id INTEGER NOT NULL, FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE, FOREIGN KEY(shop_id) REFERENCES shops(id) ON DELETE CASCADE);

CREATE TABLE IF NOT EXISTS shops_products(id INTEGER PRIMARY KEY AUTOINCREMENT, shop_id INTEGER, product_id INTEGER, quantity INTEGER, FOREIGN KEY(shop_id) REFERENCES shops(id) ON DELETE CASCADE, FOREIGN KEY(product_id) REFERENCES products(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS orders(id INTEGER PRIMARY KEY AUTOINCREMENT, orderStatus VARCHAR(20), orderDate DATE NOT NULL, deliveryAddress VARCHAR(30), paymentMethod VARCHAR(30), deliveryDate DATE, customer_id INTEGER NOT NULL, deliveryEmployee_id INTEGER, shop_id INTEGER, FOREIGN KEY(customer_id) REFERENCES customers(id) ON DELETE CASCADE, FOREIGN KEY(deliveryEmployee_id) REFERENCES deliveryEmployees(id) ON DELETE CASCADE, FOREIGN KEY(shop_id) REFERENCES shops(id) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS orders_shop_products(id INTEGER PRIMARY KEY AUTOINCREMENT, order_id INTEGER, shop_product_id INTEGER, quantity INTEGER, FOREIGN KEY(order_id) REFERENCES orders(id) ON DELETE CASCADE, FOREIGN KEY(shop_product_id) REFERENCES shops_products(id) ON DELETE CASCADE);